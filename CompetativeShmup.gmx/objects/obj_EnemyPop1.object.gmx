<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Pop1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>path = 0; //determines the path used for the enemies movement
right = 0; //means on the left screen, 1 means on the right screen
HP = 3;

alarm[0] = 1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*******************************************************
After being instantiated in a timeline, setting the instances
path variable to diferent values will change the way it
moves around the creen. 
*********************************************************/
if(path == 0)
{path_start(pth_Pop1, 3, 0, false);}
else if(path == 1)
{path_start(pth_Pop2, 3, 0, false);}
else if(path == 2)
{path_start(pth_Pop3, 3, 0, false);}
else if(path == 3)
{path_start(pth_Pop4, 3, 0, false);}
else if(path == 4)
{path_start(pth_Pop5, 3, 0, false);}
else if(path == 5)
{path_start(pth_Pop6, 3, 0, false);}
else if(path == 6)
{path_start(pth_Pop7, 3, 0, false);}
else
{path_start(pth_Pop8, 3, 0, false);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*******************************************************
Destroy obect if hp reaches zero and increment the kill 
counter for that player.
*********************************************************/

if(HP &lt;= 0)
{
    if(right == 0)
    {
        obj_GameStateManager.player1BulletSpawn = obj_GameStateManager.player1BulletSpawn + 1;
        obj_GameStateManager.player1KillCount = obj_GameStateManager.player1KillCount + 1;
        obj_Player1.meter = obj_Player1.meter + 5;
    }
    else
    {
        obj_GameStateManager.player2BulletSpawn = obj_GameStateManager.player2BulletSpawn + 1;
        obj_GameStateManager.player2KillCount = obj_GameStateManager.player2KillCount + 1;
        obj_Player2.meter = obj_Player2.meter + 5;
    }
    
    instance_destroy();
}

/*******************************************************
Handle boundary detection based on which side of the screen
the object is on (the status of the "right" variable.
*********************************************************/
if(right == 0)
{
    if(x &gt;= room_width - (680-sprite_width)) instance_destroy();
    if(x &lt;= (100-sprite_width)) instance_destroy();
}
else
{
    if(x &gt;= room_width - (100-sprite_width)) instance_destroy();
    if(x &lt;= (680-sprite_width)) instance_destroy();
}

hitObj = instance_place(x, y, obj_PlayerBulletParent);

/*******************************************************
Check for and handle collision with player bullet objects
*********************************************************/
if(hitObj != noone) 
{
     HP -= 1;
     with (hitObj) instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
